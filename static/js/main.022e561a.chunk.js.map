{"version":3,"sources":["components/Navbar/Navbar.js","components/TaskItem/TaskItem.js","components/TaskList/Tasklist.js","App.js","index.js"],"names":["Navbar","className","TaskItem","id","title","taskState","useState","isEditing","setIsEditing","editableTitle","setEditableTitle","type","value","onChange","event","newTitle","target","onKeyPress","key","onClick","e","TaskList","onAddTask","tasks","map","task","state","prototype","PropTypes","string","isRequired","func","array","idAcc","App","setTasks","newTask","existingTasks","rootElement","document","getElementById","createRoot","render"],"mappings":"oNAGe,SAASA,IACtB,OACE,qBAAKC,UAAU,SAAQ,SACrB,+BAAM,kBAGZ,C,0BCNe,SAASC,EAAS,GAAI,EAAFC,GAAyB,IAArBC,EAAK,EAALA,MACrC,GADqD,EAATC,UACVC,oBAAS,IAAM,mBAA1CC,EAAS,KAAEC,EAAY,KAC9B,EAA0CF,mBAASF,GAAM,mBAAlDK,EAAa,KAAEC,EAAgB,KAatC,OAAIH,EAEA,uBACEI,KAAK,OACLC,MAAOH,EACPI,SAhBgB,SAACC,GACrB,IAAMC,EAAWD,EAAME,OAAOJ,MAC9BF,EAAiBK,EACnB,EAcME,WAZa,SAACH,GACA,UAAdA,EAAMI,KACRV,GAAa,EAEjB,IAYS,qBAAKW,QAAS,SAACC,GAAC,OAAKZ,GAAa,EAAK,EAAC,SAAEC,GAErD,CCxBe,SAASY,EAAS,GAA8B,IAA5BjB,EAAK,EAALA,MAAOkB,EAAS,EAATA,UAAWC,EAAK,EAALA,MACnD,EAA0BjB,mBAAS,GAAE,mBAAzB,KAAU,KAatB,OACE,sBAAKL,UAAU,WAAU,UACvB,qBAAKA,UAAU,QAAO,SAAEG,IACxB,qBAAKH,UAAU,UAAS,SACrBsB,EAAMC,KAAI,SAACC,GACV,OACE,cAACvB,EAAQ,CAEPC,GAAIsB,EAAKtB,GACTC,MAAOqB,EAAKrB,MACZC,UAAWoB,EAAKC,OAHXD,EAAKtB,GAMhB,MAEF,wBAAQgB,QA1BI,WAEdG,EAAU,cAAe,WAC3B,EAuB6B,SAAC,uBAGhC,CAEAD,EAASM,UAAY,CACnBvB,MAAOwB,IAAUC,OAAOC,WACxBR,UAAWM,IAAUG,KAAKD,WAC1BP,MAAOK,IAAUI,MAAMF,Y,UChCrBG,EAAQ,EAOG,SAASC,IACtB,MAA0B5B,mBAAS,IAAG,mBAA/BiB,EAAK,KAAEY,EAAQ,KAetB,OACE,sBAAKlC,UAAU,MAAK,UAClB,cAACD,EAAM,IACP,qBAAKC,UAAU,YAAW,SACxB,cAACoB,EAAQ,CAACjB,MAAM,WAAWkB,UAjBjB,SAAClB,EAAOsB,GAGtB,IAAMU,EAAU,CACdjC,GAXJ8B,GAAgB,EAYZ7B,QACAsB,SAEFS,GAAS,SAACE,GACR,MAAM,GAAN,mBAAWA,GAAa,CAAED,GAC5B,GACF,EAMqDb,MAAOA,QAI9D,CCrCA,IAAMe,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OAAO,cAACR,EAAG,I","file":"static/js/main.022e561a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./navbar.css\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <span>React Kanban</span>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TaskItem({ id, title, taskState }) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editableTitle, setEditableTitle] = useState(title);\r\n\r\n  const onTitleChange = (event) => {\r\n    const newTitle = event.target.value;\r\n    setEditableTitle(newTitle);\r\n  };\r\n\r\n  const onKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  if (isEditing) {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        value={editableTitle}\r\n        onChange={onTitleChange}\r\n        onKeyPress={onKeyPress}\r\n      />\r\n    );\r\n  } else {\r\n    return <div onClick={(e) => setIsEditing(true)}>{editableTitle}</div>;\r\n  }\r\n}\r\n\r\nTaskItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  taskState: PropTypes.string.isRequired\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./tasklist.css\";\r\nimport TaskItem from \"../TaskItem/TaskItem\";\r\n\r\nexport default function TaskList({ title, onAddTask, tasks }) {\r\n  const [count, setCount] = useState(0);\r\n\r\n  const addTask = () => {\r\n    //console.log(\"Chamada dentro do TaskList\");\r\n    onAddTask(\"Nova Tarefa\", \"Pendente\");\r\n  };\r\n\r\n  const increment = () => {\r\n    setCount((currentCount) => {\r\n      return currentCount + 1;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasklist\">\r\n      <div className=\"title\">{title}</div>\r\n      <div className=\"content\">\r\n        {tasks.map((task) => {\r\n          return (\r\n            <TaskItem\r\n              key={task.id}\r\n              id={task.id}\r\n              title={task.title}\r\n              taskState={task.state}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <button onClick={addTask}>Adicionar Tarefa</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nTaskList.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  onAddTask: PropTypes.func.isRequired,\r\n  tasks: PropTypes.array.isRequired\r\n};\r\n","import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport TaskList from \"./components/TaskList/Tasklist\";\nimport \"./styles.css\";\n\nconst task = {\n  id: 0,\n  title: \"Nova Tarefa\",\n  state: \"Pendente\"\n};\n\nlet idAcc = 0;\n\nconst generateId = () => {\n  idAcc = idAcc + 1;\n  return idAcc;\n};\n\nexport default function App() {\n  const [tasks, setTasks] = useState([]);\n\n  const addTask = (title, state) => {\n    //console.log(\"Função sendo chamada em App\");\n\n    const newTask = {\n      id: generateId(),\n      title,\n      state\n    };\n    setTasks((existingTasks) => {\n      return [...existingTasks, newTask];\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"container\">\n        <TaskList title=\"Pendente\" onAddTask={addTask} tasks={tasks} />\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(<App />);\n"],"sourceRoot":""}